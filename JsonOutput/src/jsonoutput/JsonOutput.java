package jsonoutput;/** * @author wendylogan * Application is built with Ant and uses gson-2.9.1.jar */import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.JsonElement;import com.google.gson.JsonParser;import com.google.gson.reflect.TypeToken;import java.lang.reflect.Type;import java.util.ArrayList;import java.util.List;public class JsonOutput{public static void main (String [] args){    // Creates String array "studentInfo"    String[] studentInfo = {"Juan, Don, 3.3, 888-555-1212, snoozing;dreaming",            "Jones, Tom, 3.5, 866-555-1212, kayaking;surfing;hiking;",            "Woodhouse, Emma, 3.9, 860-555-1212, Java;Python;Javascript"};        // Creates an ArrayList of type Student "stuList"    List<Student> stuList = new ArrayList<>();        // Creates three Student Object that take their value from studentInfo    Student don = new Student(studentInfo[0]);    Student tom = new Student(studentInfo[1]);    Student emma = new Student(studentInfo[2]);        // Adds three Student Objects to "stuList"    stuList.add(don);    stuList.add(tom);    stuList.add(emma);    // Creates a new Gson Object (ready for pretty printing)    Gson gson = new GsonBuilder().setPrettyPrinting().create();        // Reference: https://github.com/google/gson/blob/master/UserGuide.md#TOC-Serializing-and-Deserializing-Generic-Types    // Converts "stuList" to a JSON String "json"    Type listType = new TypeToken<List<Student>>(){}.getType();    String json = gson.toJson(stuList, new TypeToken<List<Student>>(){}.getType());        // Converts "json" back to a *new and different* arrayList of Students "stu2"    List<Student> stu2 = new ArrayList<>();    stu2 = gson.fromJson(json,listType);        // Pretty-prints the JSON String "json"    JsonElement je = JsonParser.parseString(json);     System.out.println(gson.toJson(je) + "\n");        // Prints "stu2" with alphabetized skills    for (Student stu : stu2){        System.out.println(stu);            }}}